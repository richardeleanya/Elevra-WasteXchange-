name: Deploy

on:
  push:
    branches: [main]
    paths:
      - 'apps/**'
      - 'libs/**'
      - 'infra/**'
      - '.github/workflows/deploy.yml'

jobs:
  deploy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [api, eligibility-service, document-service, notification-service, payment-service, web]
    steps:
      - uses: actions/checkout@v4
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_GITHUB_ROLE }}
          aws-region: eu-west-2
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
      - name: Build and push Docker image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: autofundplus-${{ matrix.service }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG ./apps/${{ matrix.service }}
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
      - name: Terraform Init/Apply (on infra changes)
        if: matrix.service == 'api'
        working-directory: infra/terraform/environments/dev
        run: |
          terraform init
          terraform validate
          terraform apply -auto-approve
      - name: Update ECS Service
        env:
          AWS_REGION: eu-west-2
          SERVICE: ${{ matrix.service }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          aws ecs update-service \
            --cluster autofundplus-ecs \
            --service $SERVICE \
            --force-new-deployment \
            --region $AWS_REGION

  call-ci:
    uses: ./.github/workflows/ci.yml
    secrets: inherit